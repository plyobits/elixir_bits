# ---- Build Stage ----
FROM erlang:23-alpine AS app_builder

ENV UPDATED_AT=${TIMESTAMP}
ENV ELIXIR_VERSION=1.11.2
ENV ELIXIR_DOWNLOAD_SHA256="318f0a6cb372186b0cf45d2e9c9889b4c9e941643fd67ca0ab1ec32710ab6bf5"

# Set environment variables for building the application
ENV MIX_ENV=prod 
ENV TEST=1
ENV LANG=C.UTF-8

RUN set -xe \
      && apk add curl make --update-cache \
      && ELIXIR_DOWNLOAD_URL="https://github.com/elixir-lang/elixir/archive/v${ELIXIR_VERSION}.tar.gz" \
      && ELIXIR_DOWNLOAD_SHA256="${ELIXIR_DOWNLOAD_SHA256}" \
      && curl -fSL -o elixir-src.tar.gz $ELIXIR_DOWNLOAD_URL \
      && echo "$ELIXIR_DOWNLOAD_SHA256  elixir-src.tar.gz" | sha256sum -c - \
      && mkdir -p /usr/local/src/elixir \
      && tar -xzC /usr/local/src/elixir --strip-components=1 -f elixir-src.tar.gz \
      && rm elixir-src.tar.gz \
      && cd /usr/local/src/elixir \
      && make install clean


#Support basic native stuff as well
RUN set -xe \
      && apk add nodejs npm git build-base autoconf automake make libtool

# Install hex and rebar
RUN mix local.hex --force && \
    mix local.rebar --force

# Create the application build directory
RUN mkdir /app
WORKDIR /app

# Copy over all the necessary application files and directories
#For umbrella app
#COPY apps ./apps
#For standard app
COPY lib ./lib
COPY priv ./priv

COPY config ./config
COPY mix.exs .
COPY mix.lock .

COPY rel ./rel


# Fetch the application dependencies and build the application
RUN mix deps.get
RUN mix deps.compile

#Standard phoenix setup
RUN (cd assets/ && rm -rf ./node_modules && npm install && npm run deploy)
#Umbrella
#RUN (cd apps/%{APP_NAME}_web/assets/ && rm -rf ./node_modules && npm install && npm run deploy)

RUN mix phx.digest
RUN mix release


# ---- Application Stage ----
FROM alpine:3.12 AS app

ENV LANG=C.UTF-8

# Install openssl
RUN apk update && apk add openssl ncurses-libs

WORKDIR /app
COPY --from=app_builder /app/_build/prod/rel .

# Run the Phoenix app
CMD ["./${APP_NAME}/bin/${APP_NAME}", "start"]
